/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/flightplans": {
    /** Retrieve all flight plans */
    get: {
      responses: {
        /** @description Array of flight plans */
        200: {
          content: {
            "application/json": components["schemas"]["FlightPlan"][];
          };
        };
      };
    };
    /** Submit a new flight plan */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["FlightPlan"];
        };
      };
      responses: {
        /** @description Flight plan created */
        201: {
          content: {
            "application/json": components["schemas"]["FlightPlan"];
          };
        };
        /** @description Invalid flight plan data */
        400: {
          content: never;
        };
      };
    };
  };
  "/flightplans/{flightId}": {
    /** Retrieve a specific flight plan */
    get: {
      parameters: {
        path: {
          flightId: string;
        };
      };
      responses: {
        /** @description Flight plan details */
        200: {
          content: {
            "application/json": components["schemas"]["FlightPlan"];
          };
        };
        /** @description Flight plan not found */
        404: {
          content: never;
        };
      };
    };
  };
  "/routes": {
    /** @description All flight routes */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: never;
        };
      };
    };
    /** @description Save a new route */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["FlightPlan"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: never;
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Location: {
      /** @description Latitude */
      latitude: number;
      /** @description Longitude */
      longitude: number;
      /** @description Altitude in ft */
      altitude?: number;
    };
    Waypoint: {
      /** @description Unique waypoint id */
      waypointId: string;
      location?: components["schemas"]["Location"];
    };
    FlightRoute: components["schemas"]["Waypoint"][];
    FlightPlan: {
      /** @description Unique identifier of the flight plan */
      flightId: string;
      /** @description Unique identifier of the aircraft */
      aircraftId: string;
      /**
       * @description Indicates Instrument or Visual Flight Rules
       * @enum {string}
       */
      flightRules: "IFR" | "VFR";
      departure: {
        /**
         * Format: icao
         * @description ICAO code of the departure airport
         */
        airport?: string;
        /**
         * Format: date-time
         * @description Departure time in ISO8601 format (UTC)
         */
        time?: string;
      };
      destination: {
        /** Format: icao */
        airport?: string;
      };
      route: components["schemas"]["FlightRoute"];
      /** @description Flight Level (e.g., FL350) */
      altitude: string;
      /**
       * Format: duration
       * @description Estimated flight time (ISO 8601 Duration format)
       */
      estimatedElapsedTime: string;
      /**
       * @default pending
       * @enum {string}
       */
      status: "pending" | "approved" | "rejected";
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
